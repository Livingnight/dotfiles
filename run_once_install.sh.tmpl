#!/bin/bash
# Generated by chezmoi on {{ now | date "2006-01-02 15:04:05" }}
# Complete ChezMoi + ASDF + Tooling Setup for WSL2 (templated)
set -e

# 1. Install Neovim (latest stable AppImage)
if ! command -v nvim &>/dev/null; then
  echo "Installing Neovim..."
  curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
  chmod u+x nvim.appimage
  sudo mv nvim.appimage /usr/local/bin/nvim
fi

# 2. Install asdf if not already present
if [ ! -d "{{ .chezmoi.homeDir }}/.asdf" ]; then
  echo "Installing asdf..."
  mkdir ~/temp-asdf
  curl -LO https://github.com/asdf-vm/asdf/releases/download/v0.18.0/asdf-v0.18.0-linux-amd64.tar.gz
  tar -C ~/temp-asdf -xzf asdf-v0.18.0-linux-amd64.tar.gz
  sudo cp ~/temp-asdf/asdf /usr/local/bin
  sudo chmod +x ~/usr/local/bin/asdf
  # git clone https://github.com/asdf-vm/asdf.git "{{ .chezmoi.homeDir }}/.asdf" --branch v0.18.0

  # build asdf binary
  echo "Building asdf binary"
  cd "{{ .chezmoi.homeDir }}/.asdf"
  make
  cd -

  # Append asdf source lines to shell config files if not already present
  ZSHRC="{{ .chezmoi.homeDir }}/.zshrc"
  BASHRC="{{ .chezmoi.homeDir }}/.bashrc"

  # Check and add to zshrc
  if [ -f "$ZSHRC" ] && ! grep -q ".asdf/asdf.sh" "$ZSHRC"; then
    echo -e '\n. "{{ .chezmoi.homeDir }}/.asdf/asdf.sh"' >>"$ZSHRC"
    echo '. "{{ .chezmoi.homeDir }}/.asdf/completions/asdf.bash"' >>"$ZSHRC"
  fi

  # Check and add to bashrc
  if [ -f "$BASHRC" ] && ! grep -q ".asdf/asdf.sh" "$BASHRC"; then
    echo -e '\n. "{{ .chezmoi.homeDir }}/.asdf/asdf.sh"' >>"$BASHRC"
    echo '. "{{ .chezmoi.homeDir }}/.asdf/completions/asdf.bash"' >>"$BASHRC"
  fi
fi

# 3. Source asdf for this session
. "{{ .chezmoi.homeDir }}/.asdf/asdf.sh"

# 4. Add all required language plugins
for plugin in nodejs python golang rust; do
  asdf plugin add "$plugin" || true
  echo "Ensured plugin: $plugin"
done

# 5. Install versions from .tool-versions if present
if [ -f "{{ .chezmoi.homeDir }}/.tool-versions" ]; then
  asdf install
fi

# 6. Install Rust cargo tools if Rust is installed
export PATH="{{ .chezmoi.homeDir }}/.asdf/shims:$PATH"
export PATH="{{ .chezmoi.homeDir }}/.cargo/bin:$PATH"

CARGO_TOOLS=(cargo-edit cargo-watch cargo-audit cargo-nextest)
for tool in "${CARGO_TOOLS[@]}"; do
  if ! command -v "$tool" &>/dev/null; then
    echo "Installing Rust tool: $tool"
    cargo install "$tool"
  fi
done

# 7. Install SDKMAN if not already installed
if [ ! -d "{{ .chezmoi.homeDir }}/.sdkman" ]; then
  echo "Installing SDKMAN..."
  curl -s "https://get.sdkman.io" | bash
fi

# 8. Source SDKMAN init script if present
if [ -s "{{ .chezmoi.homeDir }}/.sdkman/bin/sdkman-init.sh" ]; then
  source "{{ .chezmoi.homeDir }}/.sdkman/bin/sdkman-init.sh"
fi

# 9. Install Java, Maven, Gradle, Spring Boot with SDKMAN
if command -v sdk &>/dev/null; then
  sdk install java 21.0.1-tem || true
  sdk install maven || true
  sdk install gradle || true
  sdk install springboot || true
fi

# 10. Setup LazyVim plugins if Neovim is installed
if command -v nvim &>/dev/null; then
  echo "Setting up LazyVim plugins..."
  nvim --headless "+Lazy! sync" +qa
fi

echo -e "\nâœ… Development environment setup complete!"
