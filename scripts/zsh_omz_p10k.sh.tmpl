#!/bin/bash
# Generated by chezmoi on {{ now | date "2006-01-02 15:04:05" }}

#INFO: sourcing utility and logging functions
# . "{{ .chezmoi.homeDir }}/scripts/logging.sh"
# . "{{ .chezmoi.homeDir }}/scripts/utils.sh"

# 1. Install Oh My Zsh
install_oh_my_zsh() {
  log_step "Installing Oh My Zsh..."

  if [ ! -d "$OH_MY_ZSH_DIR" ]; then
    log_info "Installing Oh My Zsh..."

    # Backup existing .zshrc if it exists
    backup_file "$HOME_DIR/.zshrc"

    # Install Oh My Zsh
    if sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended; then
      log_info "Oh My Zsh installed successfully"
    else
      log_error "Failed to install Oh My Zsh"
      return 1
    fi
  else
    log_info "Oh My Zsh already installed"
  fi
}

# 2. Install Powerlevel10k theme
install_powerlevel10k() {
  log_step "Installing Powerlevel10k theme..."

  if [ ! -d "$P10K_DIR" ]; then
    log_info "Installing Powerlevel10k theme..."

    if git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "$P10K_DIR"; then
      log_info "Powerlevel10k installed successfully"

      # Update .zshrc to use Powerlevel10k
      if [ -f "$HOME_DIR/.zshrc" ]; then
        sed -i 's/ZSH_THEME=".*"/ZSH_THEME="powerlevel10k\/powerlevel10k"/' "$HOME_DIR/.zshrc"
        log_info "Updated .zshrc to use Powerlevel10k theme"
      fi
    else
      log_error "Failed to install Powerlevel10k"
      return 1
    fi
  else
    log_info "Powerlevel10k already installed"
  fi
}

# 3. Install useful Oh My Zsh plugins
install_zsh_plugins() {
  log_step "Installing additional Zsh plugins..."

  local plugins_dir="$OH_MY_ZSH_DIR/custom/plugins"

  # zsh-autosuggestions
  if [ ! -d "$plugins_dir/zsh-autosuggestions" ]; then
    log_info "Installing zsh-autosuggestions..."
    git clone https://github.com/zsh-users/zsh-autosuggestions "$plugins_dir/zsh-autosuggestions"
  fi

  # zsh-syntax-highlighting
  if [ ! -d "$plugins_dir/zsh-syntax-highlighting" ]; then
    log_info "Installing zsh-syntax-highlighting..."
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git "$plugins_dir/zsh-syntax-highlighting"
  fi

  # zsh-completions
  if [ ! -d "$plugins_dir/zsh-completions" ]; then
    log_info "Installing zsh-completions..."
    git clone https://github.com/zsh-users/zsh-completions "$plugins_dir/zsh-completions"
  fi

  # Update plugins in .zshrc
  if [ -f "$HOME_DIR/.zshrc" ]; then
    # Check if plugins line exists and update it
    if grep -q "plugins=(" "$HOME_DIR/.zshrc"; then
      sed -i 's/plugins=(.*/plugins=(git asdf rust golang python docker docker-compose kubectl zsh-autosuggestions zsh-syntax-highlighting zsh-completions)/' "$HOME_DIR/.zshrc"
    else
      # Add plugins line if it doesn't exist
      echo "plugins=(git asdf rust cargo golang python nodejs docker docker-compose kubectl zsh-autosuggestions zsh-syntax-highlighting zsh-completions)" >>"$HOME_DIR/.zshrc"
    fi
    log_info "Updated Oh My Zsh plugins configuration"
  fi
}
