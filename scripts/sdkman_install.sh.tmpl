#!/bin/bash
# Generated by chezmoi on {{ now | date "2006-01-02 15:04:05" }}

set -euo pipefail

#INFO: sourcing utility and logging functions
HOME_DIR="{{ .chezmoi.homeDir }}"

. "$HOME_DIR/scripts/logging.sh"
. "$HOME_DIR/scripts/utils.sh"

install_sdkman() {
  log_step "Installing SDKMAN..."

  if [ ! -d "$HOME_DIR/.sdkman" ]; then
    log_info "Installing SDKMAN..."

    # Create a wrapper script to handle SDKMAN installation with relaxed error handling
    local sdkman_install_script=$(mktemp)
    cat >"$sdkman_install_script" <<'EOF'
#!/bin/bash
# Temporarily disable strict error handling for SDKMAN
set +euo pipefail

# Download and install SDKMAN
curl -s "https://get.sdkman.io" | bash

# Return success if .sdkman directory was created
if [ -d "$HOME/.sdkman" ]; then
    exit 0
else
    exit 1
fi
EOF

    chmod +x "$sdkman_install_script"

    if bash "$sdkman_install_script"; then
      log_info "SDKMAN installed successfully"
      rm -f "$sdkman_install_script"
    else
      log_error "Failed to install SDKMAN"
      rm -f "$sdkman_install_script"
      return 1
    fi
  else
    log_info "SDKMAN already installed"
  fi
}

# 11. Setup Java ecosystem with SDKMAN
setup_java_ecosystem() {
  log_step "Setting up Java ecosystem..."

  # Source SDKMAN init script if present with better error handling
  if [ -s "$HOME_DIR/.sdkman/bin/sdkman-init.sh" ]; then
    log_info "Sourcing SDKMAN for current session..."

    # Use safe sourcing method for SDKMAN
    if safe_source_with_export "$HOME_DIR/.sdkman/bin/sdkman-init.sh"; then
      log_info "Successfully sourced SDKMAN"

      # Verify sdk command is available
      if command_exists sdk; then
        log_info "Installing Java ecosystem tools..."

        # Install with better error handling and version checking
        log_info "Installing Java 21..."
        if ! sdk list java | grep -q "21.0.1-tem.*installed" 2>/dev/null; then
          if sdk install java 21.0.1-tem; then
            log_info "Java 21.0.1-tem installed successfully"
          else
            log_warn "Failed to install Java 21.0.1-tem"
          fi
        else
          log_info "Java 21.0.1-tem already installed"
        fi

        log_info "Installing Maven..."
        if ! command_exists mvn; then
          if sdk install maven; then
            log_info "Maven installed successfully"
          else
            log_warn "Failed to install Maven"
          fi
        else
          log_info "Maven already installed"
        fi

        log_info "Installing Gradle..."
        if ! command_exists gradle; then
          if sdk install gradle; then
            log_info "Gradle installed successfully"
          else
            log_warn "Failed to install Gradle"
          fi
        else
          log_info "Gradle already installed"
        fi

        log_info "Installing Spring Boot CLI..."
        if ! command_exists spring; then
          if sdk install springboot; then
            log_info "Spring Boot CLI installed successfully"
          else
            log_warn "Failed to install Spring Boot CLI"
          fi
        else
          log_info "Spring Boot CLI already installed"
        fi
      else
        log_warn "SDK command not available after sourcing"
      fi
    else
      log_warn "Failed to source SDKMAN properly"
      return 1
    fi
  else
    log_warn "SDKMAN init script not found at $HOME_DIR/.sdkman/bin/sdkman-init.sh"
  fi
}
