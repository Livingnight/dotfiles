#!/bin/bash
# Generated by chezmoi on {{ now | date "2006-01-02 15:04:05" }}
# Complete ChezMoi + ASDF + Tooling Setup for WSL2 (templated)

set -euo pipefail # Stricter error handling

# Configuration
readonly ASDF_VERSION="v0.18.0"
readonly ASDF_DIR="{{ .chezmoi.homeDir }}/.asdf"
readonly HOME_DIR="{{ .chezmoi.homeDir }}"
readonly CARGO_TOOLS=(cargo-edit cargo-watch cargo-audit cargo-nextest)
readonly OH_MY_ZSH_DIR="$HOME_DIR/.oh-my-zsh"
readonly P10K_DIR="$HOME_DIR/.oh-my-zsh/custom/themes/powerlevel10k"

#INFO: Function to check if command exists

# command_exists()

#INFO: Logging functions sourced from logging.sh

. "{{ .chezmoi.homeDir }}/scripts/logging.sh"

#INFO: Colors for output
# RED='\033[0;31m'
# GREEN='\033[0;32m'
# YELLOW='\033[1;33m'
# BLUE='\033[0;34m'
# NC='\033[0m' # No Color

#INFO: Logging functions
# log_info() {
# log_warn() {
# log_error() {
# log_step() {

#INFO: Utility functions sourced from 03_utils.sh

. "{{ .chezmoi.homeDir }}/scripts/utils.sh"

#INFO: function to download and verify files

# download_with_retry()

#INFO: Function to add line to file if not present

# add_to_file_if_missing()

#INFO: Function to safely source files that might have unset variables

# safe_source()

#INFO: Function to safely source with export

# safe_source_with_export()

#INFO: Function to backup existing files

# backup_file()

show_final_tips() {
  log_step "Setup complete! Here are some next steps:"

  echo ""
  echo "ðŸŽ‰ Development Environment Setup Complete!"
  echo "========================================"
  echo ""
  echo "Next steps:"
  echo "1. Restart your terminal or run: source ~/.zshrc"
  echo "2. Run 'p10k configure' to set up Powerlevel10k theme"
  echo "3. Generate SSH key: ssh-keygen -t ed25519 -C \"your_email@example.com\""
  echo "4. Add SSH key to GitHub/GitLab: cat ~/.ssh/id_ed25519.pub"
  echo "5. Configure Git: git-setup (or manually set git config)"
  echo ""
  echo "Installed tools:"
  echo "- Oh My Zsh with Powerlevel10k theme"
  echo "- Zsh plugins: autosuggestions, syntax-highlighting, completions"
  echo "- SSH configuration template"
  echo "- Git configuration helper"
  echo "- Neovim with LazyVim"
  echo "- asdf version manager"
  echo "- SDKMAN for Java ecosystem"
  echo "- Rust cargo tools"
  echo ""
  echo "Useful commands:"
  echo "- 'git-setup' - Configure Git settings"
  echo "- 'p10k configure' - Configure Powerlevel10k theme"
  echo "- 'asdf list-all <plugin>' - List available versions"
  echo "- 'sdk list java' - List available Java versions"
  echo ""
  echo "Troubleshooting:"
  echo "- If you see 'ZSH_VERSION: unbound variable', restart your terminal"
  echo "- If cargo tools show 'already installed', that's normal (use --force to override)"
  echo "- If SDKMAN commands fail, run: source ~/.sdkman/bin/sdkman-init.sh"
  echo "- If asdf commands fail, run: source ~/.asdf/asdf.sh"
  echo ""
  echo "Environment variables added to shell configs:"
  echo "- ASDF integration in ~/.zshrc and ~/.bashrc"
  echo "- SDKMAN integration will be added automatically"
  echo "- PATH modifications for local tools"
  echo ""
}

# Main execution
main() {
  log_info "Starting enhanced development environment setup..."

  # Check if running in WSL2
  if ! grep -q "microsoft" /proc/version 2>/dev/null; then
    log_warn "This script is designed for WSL2, proceeding anyway..."
  fi

  # Execute installation steps in order with better error handling
  . "{{ .chezmoi.homeDir }}/scripts/zsh_omz_p10k.sh"
  install_oh_my_zsh || { log_error "Oh My Zsh installation failed"; }
  install_powerlevel10k || { log_error "Powerlevel10k installation failed"; }
  install_zsh_plugins || { log_error "Zsh plugins installation failed"; }

  . "{{ .chezmoi.homeDir }}/scripts/git_install_and_setup.sh"
  setup_git_ssh || { log_error "Git SSH setup failed"; }

  . "{{ .chezmoi.homeDir }}/scripts/neovim_install.sh"
  install_neovim || { log_error "Neovim installation failed"; }

  . "{{ .chezmoi.homeDir }}/scripts/asdf_install.sh"
  install_asdf || { log_error "asdf installation failed"; }
  setup_asdf_tools || { log_error "asdf tools setup failed"; }
  install_cargo_tools || { log_error "Cargo tools installation failed"; }

  . "{{ .chezmoi.homeDir }}/scripts/sdkman_install.sh"
  install_sdkman || { log_error "SDKMAN installation failed"; }
  setup_java_ecosystem || { log_error "Java ecosystem setup failed"; }

  . "{{ .chezmoi.homeDir }}/scripts/lazyvim_setup.sh"
  setup_lazyvim || { log_error "LazyVim setup failed"; }

  show_final_tips
}

# Run main function
main "$@"
